[{"title":"book-reading-about-pkr-working-methods-转载","url":"http://yoursite.com/2019/06/20/book-reading-about-pkr-working-methods-转载/","content":"<h1 id=\"原文转载\"><a href=\"#原文转载\" class=\"headerlink\" title=\"原文转载\"></a>原文转载</h1><p>description: <a href=\"https://www.barretlee.com\" target=\"_blank\" rel=\"noopener\">小胡子哥的个人网站</a></p>\n<p>author: 小胡子哥</p>\n<hr>\n<p><a href=\"https://www.barretlee.com/blog/2019/05/16/book-reading-about-okr-working-methods/\" target=\"_blank\" rel=\"noopener\">转载地址</a></p>\n<hr>\n<hr>\n<p>花了两天功夫把 <a href=\"https://www.amazon.cn/dp/B07577T3XS/ref=sr_1_1?__mk_zh_CN=%E4%BA%9A%E9%A9%AC%E9%80%8A%E7%BD%91%E7%AB%99&amp;keywords=okr%E5%B7%A5%E4%BD%9C%E6%B3%95&amp;qid=1557965131&amp;s=gateway&amp;sr=8-1\" target=\"_blank\" rel=\"noopener\">《OKR 工作法》</a> 读了一遍，有一点收获，<a id=\"more\"></a>稍微记录下所思所想。</p>\n<p><img src=\"https://linkenwild.github.io/images/book-OKR.png\" alt=\"upload successful\"></p>\n<p>这本书内容并不多，前面几章通过一个创业故事让读者对 OKR 有一个整体的体感，后面两个章节，详细讲了 OKR 中 O 和 KR 具体的场景，应对的策略和背后的思考。</p>\n<p>笔者在阿里巴巴工作，厂里推行的是 KPI 绩效考核制度，与 OKR 的理念还是有挺大的差异。两者都是目标实现的管理工具，前者不仅会帮助管理目标，而且会与薪资、晋升等挂钩，这就导致了，践行 OKR 的公司员工会更加注重公司/团队的目标实现，而践行 KPI 的公司员工会更加注重如何保质保量地完成个人目标。既然是管理工具，自然得看管理者能不能用好；两者都有各自的应用场景，没有好坏之分。</p>\n<p>由于之前对 OKR 了解不多，仅靠读一本书也难以达到深入理解的状态，后续一年，我会通过 <a href=\"https://worktile.com\" target=\"_blank\" rel=\"noopener\">worktile</a> 提供的目标管理工具进行一年的家庭&amp;个人目标管理，以此来熟悉 OKR 工作法。</p>\n<p>OKR 是一套定义和跟踪目标及其完成情况的管理方法，大致是：</p>\n<ol>\n<li>首先需要制定一个为期至少 3 月鼓舞人心的目标（Objective）</li>\n<li>针对目标思考几个关键结果（Key Result），用于衡量效果</li>\n<li>确定好本周需要推进的事项，以及其优先级，每周 review 目标和关键结果</li>\n<li>确定好未来 1 月需要推进的事项</li>\n</ol>\n<p>从上面的几点可以感受到，OKR 一直在帮助践行者聚焦目标，帮助监督所做的每一件事情都对目标有帮助，将最能够触达目标的事情优先级提到最高。下面解释下为什么要这样做，以及这样做为什么会取得好的结果。</p>\n<h3 id=\"目标的设定\"><a href=\"#目标的设定\" class=\"headerlink\" title=\"目标的设定\"></a>目标的设定</h3><p><strong>目标的设定一定要鼓舞人心</strong>，OKR 工作法中提到了一个自信指数，如果你有 100% 把握完成目标，说明这个目标门槛太低了；如果信心指数低于 50%，那么实施起来压力会特别大，过程中遇到一点阻碍，可能就放弃了；70% 是一个很好的阈值，即基本上可以达到目标但又会有一点挑战。自信指数是随着时间的推移不断变化的，每周都要重新调整。</p>\n<p>另外，<strong>目标不宜过短</strong>，一两周就能完成的工作，那个不能叫做目标，最多是个任务。周期最好是一个季度以上。</p>\n<p>在设定目标之前，一定需要<strong>为全员灌输长期的使命</strong>，这个使命至少可以维持 3~5 年，比如阿里巴巴的使命是“让天下没有难做的生意”，谷歌的使命是“整合全球信息，使人人皆可访问和收益”等等。有了长期的使命，每个阶段所拟定的目标就不会有大的偏差。</p>\n<p>除非有好几个互不相交的方向，否则目标有一个就行了，<strong>不要太多</strong>。</p>\n<h3 id=\"关键结果\"><a href=\"#关键结果\" class=\"headerlink\" title=\"关键结果\"></a>关键结果</h3><p>关键结果是用来衡量目标的，一定要反复对焦目标来确定 3~4 个关键结果，确保关键结果是可以支撑实现目标的，正向推导、反向演绎等，通过多种方式确保关键结果的拟定准确性，这个过程一般需要多轮对焦和辩论。</p>\n<p>若你看到关键结果内心有点小激动或小彷徨，那就对了，需要有点挑战才能拿到符合预期的目标结果。</p>\n<p><strong>关键结果应该是可衡量的</strong>，最好遵循 <a href=\"https://en.wikipedia.org/wiki/SMART_criteria\" target=\"_blank\" rel=\"noopener\">SMART</a> 原则来制定。</p>\n<h3 id=\"过程监督\"><a href=\"#过程监督\" class=\"headerlink\" title=\"过程监督\"></a>过程监督</h3><p><strong>OKR 的意义不仅仅在于完成目标，更重要的是帮助团队挖掘真正的实力</strong>。在每周的进度跟进会上，不应该把所做的事情当做汇报和考核结果来呈现，应该通过反复的对焦，确定所做的事情是对目标有意义的，对目标有推进作用的。</p>\n<p>在 OKR 践行过程中，要确保短期和中长期要做的事情，不断调整和确认优先级，以确保整个团队的信心指数是在持续提升的。过程中需要及时处理风险和问题，以防出现过大的偏差。</p>\n<p>通过一个阶段（季度）的实践，基本可以摸索出团队的综合实力，对比阶段开始前设定的目标和团队拿到的结果，可以看出团队是否故意隐藏了实力，或者是否目标设置得过高，在下一个阶段作出合适调整。一方面，可以更好的完成目标，另一方面，不断的挖掘、培养和提升团队的综合实力。</p>\n<hr>\n<p>后续将用一年时间来感受下 OKR，希望一年以后可以有更深的感悟。</p>\n<hr>\n<hr>\n<p>本文 Markdown 地址: <a href=\"https://github.com/linkenwild/linkenwild.github.io/blob/master/Markdown/_posts/book-reading-about-okr-working-methods%5B%E8%BD%AC%E8%BD%BD%5D.md\" target=\"_blank\" rel=\"noopener\">游记 · 内蒙古银肯响沙湾.md</a></p>\n<hr>\n","categories":["技术迁移"],"tags":["技术分享"]},{"title":"bmp2pcb软件使用","url":"http://yoursite.com/2019/06/20/bmp2pcb软件使用/","content":"<h1 id=\"原因\"><a href=\"#原因\" class=\"headerlink\" title=\"原因\"></a>原因</h1><hr>\n<p>在画PCB中，需要将logo加到top overlay层。下面讲如何实现。</p>\n<hr>\n<h2 id=\"工具\"><a href=\"#工具\" class=\"headerlink\" title=\"工具\"></a>工具</h2><hr>\n<p>使用的是Altium Designer 15<br>并且使用软件已经建好的一个工程。</p>\n<hr>\n<h2 id=\"下载logo绘制脚本\"><a href=\"#下载logo绘制脚本\" class=\"headerlink\" title=\"下载logo绘制脚本\"></a>下载logo绘制脚本</h2><hr>\n<p>链接: <a href=\"https://pan.baidu.com/s/1LfSw3zsXjSx2P4oS8hFs6A\" target=\"_blank\" rel=\"noopener\">https://pan.baidu.com/s/1LfSw3zsXjSx2P4oS8hFs6A</a> 提取码: 4axy</p>\n<hr>\n<h3 id=\"生成bmp文件\"><a href=\"#生成bmp文件\" class=\"headerlink\" title=\"生成bmp文件\"></a>生成bmp文件</h3><hr>\n<p>方法</p>\n<ol>\n<li>选择图片，使用Windows自带的画图软件打开，不做任何改动另存为<strong>单色位图</strong>保存。</li>\n</ol>\n<p><img src=\"https://linkenwild.github.io/images/danseweitu.png\" alt></p>\n<h3 id=\"打开DXP软件，选择DXP下的运行脚本\"><a href=\"#打开DXP软件，选择DXP下的运行脚本\" class=\"headerlink\" title=\"打开DXP软件，选择DXP下的运行脚本\"></a>打开DXP软件，选择DXP下的运行脚本</h3><p><img src=\"https://linkenwild.github.io/images/jiaoben.png\" alt></p>\n<h3 id=\"浏览找到已下载的脚本\"><a href=\"#浏览找到已下载的脚本\" class=\"headerlink\" title=\"浏览找到已下载的脚本\"></a>浏览找到已下载的脚本</h3><h3 id=\"选中-OK\"><a href=\"#选中-OK\" class=\"headerlink\" title=\"选中 OK\"></a>选中 OK</h3><p><img src=\"https://linkenwild.github.io/images/ok.jpg\" alt></p>\n<h3 id=\"单击load，选择单色位图bmp图像\"><a href=\"#单击load，选择单色位图bmp图像\" class=\"headerlink\" title=\"单击load，选择单色位图bmp图像\"></a>单击load，选择单色位图bmp图像</h3><h3 id=\"点击convert-，几秒后，生成logo\"><a href=\"#点击convert-，几秒后，生成logo\" class=\"headerlink\" title=\"点击convert ，几秒后，生成logo\"></a>点击convert ，几秒后，生成logo</h3><p><img src=\"https://linkenwild.github.io/images/logo.jpg\" alt></p>\n<h3 id=\"复制粘贴到pcb文件中\"><a href=\"#复制粘贴到pcb文件中\" class=\"headerlink\" title=\"复制粘贴到pcb文件中\"></a>复制粘贴到pcb文件中</h3>","categories":["软件介绍"],"tags":["技术迁移"]},{"title":"越南芽庄旅游必备","url":"http://yoursite.com/2019/06/20/越南芽庄旅游必备/","content":"<h1 id=\"越南出行\"><a href=\"#越南出行\" class=\"headerlink\" title=\"越南出行\"></a>越南出行</h1><hr>\n<ul>\n<li>背包不要超过17kg</li>\n<li>有单反吗（租）</li>\n<li>小药品（创可贴、清凉油）</li>\n<li>几套换洗衣服</li>\n<li>必备APP（极简汇率（方便兑换货币）；出国翻译官）</li>\n<li>Booking（预定酒店–跟团省略）</li>\n<li>谷歌地图</li>\n<li>口罩</li>\n</ul>\n<hr>\n<p><img src=\"https://linkenwild.github.io/images/yazhuang.png\" alt=\"upload successful\"></p>\n<hr>\n","categories":["生活杂记"],"tags":["remind"]},{"title":"linux系统信息指令","url":"http://yoursite.com/2019/05/27/linux系统信息指令/","content":"<h1 id=\"系统信息指令\"><a href=\"#系统信息指令\" class=\"headerlink\" title=\"系统信息指令\"></a>系统信息指令</h1><hr>\n<h2 id=\"data\"><a href=\"#data\" class=\"headerlink\" title=\"data\"></a>data</h2><blockquote>\n<p>显示当前信息</p>\n</blockquote>\n<hr>\n<h2 id=\"cal\"><a href=\"#cal\" class=\"headerlink\" title=\"cal\"></a>cal</h2><blockquote>\n<p>显示当月日历</p>\n</blockquote>\n<h3 id=\"cal-参数-月份-年份\"><a href=\"#cal-参数-月份-年份\" class=\"headerlink\" title=\"cal[参数][月份][年份]\"></a>cal[参数][月份][年份]</h3><hr>\n<h4 id=\"命令参数\"><a href=\"#命令参数\" class=\"headerlink\" title=\"命令参数\"></a>命令参数</h4><ul>\n<li>-1显示一个月的日历</li>\n<li>-3显示系统前一个月，当月，下一个月的日历</li>\n<li>-s显示星期天为一个星期的first day</li>\n<li>-m显示星期一为一个星期的first day</li>\n<li>-j显示在当年的第几天</li>\n<li>-y显示当年年份的日历</li>\n</ul>\n<hr>\n<ol>\n<li>显示当前月份的日历<br><img src=\"https://linkenwild.github.io/images/cal.png\" alt></li>\n<li>显示指定月份的日历<br><img src=\"https://linkenwild.github.io/images/cal1.png\" alt></li>\n<li>显示某一年的月份<br><img src=\"https://linkenwild.github.io/images/fen.png\" alt></li>\n<li>天数<br><img src=\"https://linkenwild.github.io/images/tianshu.png\" alt></li>\n</ol>\n<hr>\n","categories":["Linux学习"],"tags":["Linux"]},{"title":"如何添加店员提醒-微信收款小账本","url":"http://yoursite.com/2019/05/17/如何添加店员提醒-微信收款小账本/","content":"<p>如何设置使得在微信收款小程序中，添加店员接收通知–使得被添加的人能够：</p>\n<ul>\n<li>接收你的收款通知</li>\n<li>查看你当天的收款详情</li>\n</ul>\n<hr>\n<hr>\n<h1 id=\"第一步\"><a href=\"#第一步\" class=\"headerlink\" title=\"第一步\"></a>第一步</h1><p><img src=\"https://linkenwild.github.io/images/wechatshoukuan1.jpg\" alt></p>\n<hr>\n<hr>\n<h1 id=\"第二步\"><a href=\"#第二步\" class=\"headerlink\" title=\"第二步\"></a>第二步</h1><p><img src=\"https://linkenwild.github.io/images/wechatshoukuan2.jpg\" alt></p>\n<hr>\n<hr>\n<h1 id=\"第三步\"><a href=\"#第三步\" class=\"headerlink\" title=\"第三步\"></a>第三步</h1><p><img src=\"https://linkenwild.github.io/images/wechatshoukuan3.jpg\" alt></p>\n<hr>\n<hr>\n<h1 id=\"第四步\"><a href=\"#第四步\" class=\"headerlink\" title=\"第四步\"></a>第四步</h1><p><img src=\"https://linkenwild.github.io/images/wechatshoukuan4.jpg\" alt></p>\n<hr>\n<hr>\n<h1 id=\"第五步\"><a href=\"#第五步\" class=\"headerlink\" title=\"第五步\"></a>第五步</h1><p><img src=\"https://linkenwild.github.io/images/wechatshoukuan5.jpg\" alt></p>\n<hr>\n<hr>\n<h2 id=\"搞定！\"><a href=\"#搞定！\" class=\"headerlink\" title=\"搞定！\"></a>搞定！</h2>","categories":["生活杂记"],"tags":["remind"]},{"title":"封装","url":"http://yoursite.com/2019/05/13/封装/","content":"<hr>\n<p><img src=\"https://linkenwild.github.io/images/fengzhuang.png\" alt></p>\n","categories":["硬件"],"tags":["PCB"]},{"title":"打印机复印双面文件使用方法总结","url":"http://yoursite.com/2019/05/08/打印机复印双面文件使用方法总结/","content":"<p>不管是自己复印材料还是帮人复印资料，单面打印不会出现问题。当需要双面打印或者类似身份证双面复印到一面上时，总是莫名其妙的出现错误：</p>\n<ul>\n<li>要么身份证正反面复印到两面去了</li>\n<li>要么身份证复印到一面，但是出现重叠</li>\n</ul>\n<hr>\n<p>今天就记录下复印技巧，以备后用。</p>\n<hr>\n<p>参考链接：</p>\n<p><a href=\"https://jingyan.baidu.com/article/b24f6c82c2d0d386bee5da69.html\" target=\"_blank\" rel=\"noopener\">身份证正反面复印技巧</a></p>\n<h3 id=\"①将身份证正面朝下，字体朝左，放入复印机上面左五分之二处，进行复印-打印出来后，A4纸左上角做一个三角△符号标记\"><a href=\"#①将身份证正面朝下，字体朝左，放入复印机上面左五分之二处，进行复印-打印出来后，A4纸左上角做一个三角△符号标记\" class=\"headerlink\" title=\"①将身份证正面朝下，字体朝左，放入复印机上面左五分之二处，进行复印 (打印出来后，A4纸左上角做一个三角△符号标记)\"></a>①将身份证正面朝下，字体朝左，放入复印机上面左五分之二处，进行复印 (打印出来后，A4纸左上角做一个三角△符号标记)</h3><h3 id=\"②将身份证进行同位置放置注意-身份证反面朝下-字体也反方向，意思是字体朝右-安放，同时复印出来的A4纸张三角△符号朝纸盒外部方向且正面朝上放置，复印\"><a href=\"#②将身份证进行同位置放置注意-身份证反面朝下-字体也反方向，意思是字体朝右-安放，同时复印出来的A4纸张三角△符号朝纸盒外部方向且正面朝上放置，复印\" class=\"headerlink\" title=\"②将身份证进行同位置放置注意-身份证反面朝下(字体也反方向，意思是字体朝右)安放，同时复印出来的A4纸张三角△符号朝纸盒外部方向且正面朝上放置，复印\"></a>②将身份证进行同位置放置<a href>注意</a>-身份证反面朝下(字体也反方向，意思是字体朝右)安放<img src=\"https://linkenwild.github.io/images/sanjiao.jpg\" alt>，同时复印出来的A4纸张三角△符号朝纸盒外部方向且正面朝上放置，复印<img src=\"https://linkenwild.github.io/images/shenfenzheng.jpg\" alt></h3>","categories":["设计"],"tags":["remind"]},{"title":"要学习的数据结构与算法","url":"http://yoursite.com/2019/05/08/要学习的数据结构与算法/","content":"<p>为了后面找工作，需要进行基础补坑。从现在起，立个flag，把20个重要的基础数据结构和算法知识扎实根基。</p>\n<hr>\n<h2 id=\"10个数据结构\"><a href=\"#10个数据结构\" class=\"headerlink\" title=\"10个数据结构\"></a>10个数据结构</h2><hr>\n<ol>\n<li>数组</li>\n<li>链表</li>\n<li>栈</li>\n<li>队列</li>\n<li>散列表</li>\n<li>二叉树</li>\n<li>堆</li>\n<li>跳表</li>\n<li>图</li>\n<li>Trie树(字典树)</li>\n</ol>\n<hr>\n<h2 id=\"10个算法\"><a href=\"#10个算法\" class=\"headerlink\" title=\"10个算法\"></a>10个算法</h2><hr>\n<ol>\n<li>递归</li>\n<li>排序</li>\n<li>二分查找</li>\n<li>搜索</li>\n<li>哈希算法</li>\n<li>贪心算法</li>\n<li>分治算法</li>\n<li>回溯算法</li>\n<li>动态规划</li>\n<li>字符串匹配算法</li>\n</ol>\n<hr>\n<h2 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h2><hr>\n<p>这些里面也分重要和次重要的，不能眉毛胡子一把抓，先把最最重要的坑填上，再看时间是否充裕，决定把次重要的坑补上。</p>\n<hr>\n","categories":["技术"],"tags":["技术分析"]},{"title":"ubuntu安装过程记录","url":"http://yoursite.com/2019/05/07/ubuntu安装过程记录/","content":"<h1 id=\"我的第一次ubuntu安装记录\"><a href=\"#我的第一次ubuntu安装记录\" class=\"headerlink\" title=\"我的第一次ubuntu安装记录\"></a>我的第一次ubuntu安装记录</h1><hr>\n<h3 id=\"碎碎念\"><a href=\"#碎碎念\" class=\"headerlink\" title=\"碎碎念\"></a>碎碎念</h3><hr>\n<p>之前十分好奇ubuntu，使用VMware软件安装的ubuntu虚拟机，但是是拷贝的别的工程，ubuntu版本号是12.04。自己想动手操作一下安装最新的18.04版本，今天写下这些记录和过程。</p>\n<hr>\n<h2 id=\"安装过程技术支持\"><a href=\"#安装过程技术支持\" class=\"headerlink\" title=\"安装过程技术支持\"></a>安装过程技术支持</h2><hr>\n<p>本次安装过程中，不解之处向<a href></a>中许多爱好者作了请教和咨询，给出了相当多的建议。</p>\n<hr>\n<h5 id=\"下载ubuntu镜像ISO文件\"><a href=\"#下载ubuntu镜像ISO文件\" class=\"headerlink\" title=\"下载ubuntu镜像ISO文件\"></a>下载ubuntu镜像ISO文件</h5><p>使用telegram群组<a href=\"https://t.me/ubuntuzh\" target=\"_blank\" rel=\"noopener\">Ubuntu中文</a>群友提供的国内aliyun地址：<a href=\"https://mirrors.aliyun.com/ubuntu-releases/18.04.2/\" target=\"_blank\" rel=\"noopener\">ubuntun download</a></p>\n<hr>\n<h2 id=\"使用VMware建立虚拟机工程\"><a href=\"#使用VMware建立虚拟机工程\" class=\"headerlink\" title=\"使用VMware建立虚拟机工程\"></a>使用VMware建立虚拟机工程</h2><ul>\n<li>根据向导建立工程</li>\n<li>建立好之后将ISO文件导入工程</li>\n</ul>\n<hr>\n<h2 id=\"配置如图所示\"><a href=\"#配置如图所示\" class=\"headerlink\" title=\"配置如图所示\"></a>配置如图所示</h2><p><img src=\"https://linkenwild.github.io/images/virtual_machine.png\" alt></p>\n","categories":["技术"],"tags":["技术分析"]},{"title":"运算放大器的理解","url":"http://yoursite.com/2019/05/06/运算放大器的理解/","content":"<h1 id=\"运算放大器\"><a href=\"#运算放大器\" class=\"headerlink\" title=\"运算放大器\"></a>运算放大器</h1><hr>\n<h2 id=\"理想运放\"><a href=\"#理想运放\" class=\"headerlink\" title=\"理想运放\"></a>理想运放</h2><hr>\n<p>理想运放是输入阻抗无穷大，输出阻抗为零的放大器。</p>\n<hr>\n<h3 id=\"运算放大器的两大重要原则\"><a href=\"#运算放大器的两大重要原则\" class=\"headerlink\" title=\"运算放大器的两大重要原则\"></a>运算放大器的两大重要原则</h3><a id=\"more\"></a>\n<ol>\n<li>虚短<br>即输入端正相输入端电压和反相输入端电压相等  </li>\n<li>虚断<br>即输入端和输出断电流为0</li>\n</ol>\n<hr>\n<p>有一篇博客写的十分优秀，此处贴上链接</p>\n<p><a href=\"https://blog.csdn.net/superanters/article/details/9787745\" target=\"_blank\" rel=\"noopener\">简易讲解运放_superanters</a></p>\n<p><img src=\"https://linkenwild.github.io/images/amplifier.jpg\" alt></p>\n","categories":["硬件"],"tags":["技术分享"]},{"title":"事业考知乎经验笔记总结","url":"http://yoursite.com/2019/05/01/事业考知乎经验笔记总结/","content":"<h1 id=\"高效备考事业单位考试\"><a href=\"#高效备考事业单位考试\" class=\"headerlink\" title=\"高效备考事业单位考试\"></a>高效备考事业单位考试</h1><hr>\n<h2 id=\"方法——狂刷题\"><a href=\"#方法——狂刷题\" class=\"headerlink\" title=\"方法——狂刷题\"></a>方法——狂刷题</h2><blockquote>\n<p>事业单位考试资料论坛</p>\n<blockquote>\n<p>十九大热点，民法</p>\n</blockquote>\n<p>粉笔公考事业单位题库</p>\n<blockquote>\n<p>隔段时间有个模考，定期参加</p>\n</blockquote>\n</blockquote>\n<h3 id=\"刷题的书：华图5880题和中公的6000题\"><a href=\"#刷题的书：华图5880题和中公的6000题\" class=\"headerlink\" title=\"刷题的书：华图5880题和中公的6000题\"></a><del>刷题的书：华图5880题和中公的6000题</del></h3><p>相对<strong>中公</strong>好一点<br>知识要点推荐粉笔事业单位系统班，最好看一遍，再刷题。闲鱼有卖。</p>\n<hr>\n<p>时政：粉笔时政课1块钱，关注<strong>粉笔公众号</strong>，里面有时政热点，<br>公众号：<strong>人民日报，人民日报评论，半月谈，华公公考，纵横公考，粉笔公考，腰果公考，</strong></p>\n<hr>\n<h2 id=\"节目：\"><a href=\"#节目：\" class=\"headerlink\" title=\"节目：\"></a>节目：</h2><p>新闻1+1，焦点访谈，将改革进行到底，法治中国，下载离线听</p>\n<hr>\n<h2 id=\"申论：\"><a href=\"#申论：\" class=\"headerlink\" title=\"申论：\"></a>申论：</h2><p>粉笔系统班_材料作文专项课，事业单位申论没公务员高，多练标题和三个合题的分论点，开头结尾有模版，多积累。</p>\n<hr>\n<h1 id=\"事业单位报考：\"><a href=\"#事业单位报考：\" class=\"headerlink\" title=\"事业单位报考：\"></a>事业单位报考：</h1><p>离家近，事业单位求个稳定，工资不多，</p>\n<hr>\n<p><a href=\"https://www.zhihu.com/question/23883149\" target=\"_blank\" rel=\"noopener\">知乎参考链接</a></p>\n<hr>\n<ul>\n<li><img src=\"https://linkenwild.github.io/images/公共基础.jpg\" alt></li>\n</ul>\n<ul>\n<li><img src=\"https://linkenwild.github.io/images/宪法.jpg\" alt></li>\n</ul>\n<ul>\n<li><img src=\"https://linkenwild.github.io/images/山东事业单位考.jpg\" alt>​</li>\n</ul>\n","categories":["知乎摘录"],"tags":["事业单位考试"]},{"title":"Markdown教程","url":"http://yoursite.com/2019/04/29/Markdown教程/","content":"<h1 id=\"一级标题\"><a href=\"#一级标题\" class=\"headerlink\" title=\"一级标题\"></a>一级标题</h1><h2 id=\"二级标题\"><a href=\"#二级标题\" class=\"headerlink\" title=\"二级标题\"></a>二级标题</h2><h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a>三级标题</h3><h4 id=\"四级标题\"><a href=\"#四级标题\" class=\"headerlink\" title=\"四级标题\"></a>四级标题</h4><h5 id=\"五级标题\"><a href=\"#五级标题\" class=\"headerlink\" title=\"五级标题\"></a>五级标题</h5><h6 id=\"六级标题\"><a href=\"#六级标题\" class=\"headerlink\" title=\"六级标题\"></a>六级标题</h6><hr>\n<h2 id=\"只有六个级别的标题\"><a href=\"#只有六个级别的标题\" class=\"headerlink\" title=\" [只有六个级别的标题]\"></a> <em>[只有六个级别的标题]</em></h2><h1 id=\"一级标题-1\"><a href=\"#一级标题-1\" class=\"headerlink\" title=\"一级标题\"></a>一级标题</h1><h1 id=\"一级标题-2\"><a href=\"#一级标题-2\" class=\"headerlink\" title=\"一级标题\"></a>一级标题</h1><hr>\n<h2 id=\"二级标题-1\"><a href=\"#二级标题-1\" class=\"headerlink\" title=\"二级标题\"></a>二级标题</h2><h2 id=\"二级标题-2\"><a href=\"#二级标题-2\" class=\"headerlink\" title=\"二级标题\"></a>二级标题</h2><hr>\n<p><img src=\"https://linkenwild.github.io/images/ziti.jpg\" alt></p>\n<p>这里是一段文字<br>是否换行了<br>方法一：换行使用两个空格+enter键<br>方法二：在段落后面使用一个空行表示换行</p>\n<h1 id=\"字体选择\"><a href=\"#字体选择\" class=\"headerlink\" title=\"字体选择\"></a>字体选择</h1><p>2019/4/29 15:48:02 </p>\n<hr>\n<p><strong><em>方法有两种</em></strong><br><em>斜体文字</em><br><em>斜体文字</em></p>\n<hr>\n<p><strong>方法同样有两种</strong><br><strong>粗体文字</strong><br><strong>粗体文字</strong>  </p>\n<hr>\n<p><strong><em>粗斜体文字</em></strong><br><strong><em>粗斜体文字</em></strong>  </p>\n<hr>\n<h1 id=\"删除线\"><a href=\"#删除线\" class=\"headerlink\" title=\"删除线\"></a>删除线</h1><p>段落文字添加删除线 ，为两端加上两个波浪线~~<br>即可</p>\n<p><strong>shell</strong><del>提示符</del></p>\n<hr>\n<p><del>BAIDU.COM</del>  </p>\n<h2 id=\"下划线\"><a href=\"#下划线\" class=\"headerlink\" title=\"下划线\"></a>下划线</h2><p>使用标签来实现<br><img src=\"https://linkenwild.github.io/images/xiahuaxian.jpg\" alt=\"下划线\">  </p>\n<p>&lt;Centos系统&gt;</p>\n<hr>\n<h1 id=\"脚注\"><a href=\"#脚注\" class=\"headerlink\" title=\"脚注\"></a>脚注</h1><hr>\n<p>编写简单的<a href=\"实现天空自由的翱翔！\">^脚本实用工具</a>  </p>\n<p><img src=\"https://linkenwild.github.io/images/jiaozhu.jpg\" alt>  </p>\n<ul>\n<li>one</li>\n<li>second</li>\n</ul>\n<ul>\n<li>three</li>\n<li>four</li>\n<li>five  </li>\n<li></li>\n</ul>\n<hr>\n<ol>\n<li>one</li>\n<li>second</li>\n<li>three</li>\n<li>four</li>\n<li>five</li>\n</ol>\n<hr>\n<ol>\n<li>一   <ul>\n<li>电饭锅</li>\n<li>勺子</li>\n</ul>\n</li>\n<li>——</li>\n</ol>\n<h1 id=\"代码块\"><a href=\"#代码块\" class=\"headerlink\" title=\"代码块\"></a>代码块</h1><hr>\n<p>如果是段落上的一个函数或片段的代码可以用反引号把它包起来</p>\n<pre class=\" language-shell\"><code class=\"language-shell\">printf\n</code></pre>\n<p>   你也可以用</p>\n<blockquote>\n<p><code>`</code>    </p>\n</blockquote>\n<p>包裹一段代码，并指定一种语言（也可以不指定）：</p>\n<pre class=\" language-shell\"><code class=\"language-shell\">printf();\nfor(int a =0;i<10;i++);\n</code></pre>\n<hr>\n<h1 id=\"Markdown-链接\"><a href=\"#Markdown-链接\" class=\"headerlink\" title=\"Markdown 链接\"></a>Markdown 链接</h1><hr>\n<blockquote>\n<p>中括号后面跟着一个小括号，中括号是链接名称，小括号内是链接网址</p>\n</blockquote>\n<p><a href=\"https://www.runoob.com/\" target=\"_blank\" rel=\"noopener\">菜鸟教程</a>  </p>\n<h1 id=\"Markdown-图片\"><a href=\"#Markdown-图片\" class=\"headerlink\" title=\"Markdown 图片\"></a>Markdown 图片</h1><hr>\n<ul>\n<li>开头感叹号</li>\n<li>接着一个方括号，方括号内放图片介绍文字</li>\n<li>接着小括号，小括号内放图片网址  </li>\n</ul>\n<hr>\n<h1 id=\"Markdown-表格\"><a href=\"#Markdown-表格\" class=\"headerlink\" title=\"Markdown 表格\"></a>Markdown 表格</h1><p><img src=\"https://linkenwild.github.io/images/biaoge.jpg\" alt>  </p>\n<hr>\n<h1 id=\"其他元素\"><a href=\"#其他元素\" class=\"headerlink\" title=\"其他元素\"></a>其他元素</h1><hr>\n<hr>\n<p><kdb>Ctrl</kdb>+<kdb>Alt</kdb>+<kdb>Del</kdb>重启电脑</p>\n<h1 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h1><hr>\n<blockquote>\n<p>一级引用</p>\n<blockquote>\n<p>二级引用</p>\n<blockquote>\n<p>三级引用</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<hr>\n<h1 id=\"流程图\"><a href=\"#流程图\" class=\"headerlink\" title=\"流程图\"></a><del>流程图</del></h1><pre class=\" language-graph\"><code class=\"language-graph\">graph TD;\n    A-->B;\n    A-->C;\n    A-->D;\n    B-->E;\n    B-->F;\n    C-->G;\n    D-->H;\n    D-->I;\n    D-->J;\n    E-->L;\n    F-->L;\n    G-->L;\n    H-->L;\n    J-->L;\n    I-->L;\n    L-->W;\n</code></pre>\n","categories":["Markdown"],"tags":["Markdown"]},{"title":"测试DEMO","url":"http://yoursite.com/2019/04/29/测试DEMO/","content":"<h2 id=\"测试DEMO\"><a href=\"#测试DEMO\" class=\"headerlink\" title=\"测试DEMO\"></a>测试DEMO</h2><hr>\n<h4 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h4><p><img src=\"https://alpha.wallhaven.cc/wallpapers/thumb/small/th-729362.jpg\" alt=\"图片demo\"></p>\n<hr>\n<h4 id=\"代码块\"><a href=\"#代码块\" class=\"headerlink\" title=\"代码块\"></a>代码块</h4><pre class=\" language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello wolrd'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<pre class=\" language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>String args<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    System<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello wolrd\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<pre class=\" language-shell\"><code class=\"language-shell\">echo \"hello wolrd\"\n</code></pre>\n<hr>\n<p><a href=\"https://tczmh.gitee.io/markdown/\" target=\"_blank\" rel=\"noopener\">参考链接</a></p>\n<h2 id=\"END\"><a href=\"#END\" class=\"headerlink\" title=\"END\"></a>END</h2>","categories":["Markdown"],"tags":["技术分享"]},{"title":"code test","url":"http://yoursite.com/2019/04/28/code-test/","content":"<h2 id=\"测试代码\"><a href=\"#测试代码\" class=\"headerlink\" title=\"测试代码\"></a>测试代码</h2><hr>\n<h3 id=\"python\"><a href=\"#python\" class=\"headerlink\" title=\"python\"></a>python</h3><h4 id=\"代码块\"><a href=\"#代码块\" class=\"headerlink\" title=\"代码块\"></a>代码块</h4><hr>\n<pre class=\" language-python\"><code class=\"language-python\">Python <span class=\"token number\">2.7</span><span class=\"token punctuation\">.</span><span class=\"token number\">10</span> <span class=\"token punctuation\">(</span>default<span class=\"token punctuation\">,</span> Aug <span class=\"token number\">22</span> <span class=\"token number\">2015</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">:</span><span class=\"token number\">33</span><span class=\"token punctuation\">:</span><span class=\"token number\">39</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span>GCC <span class=\"token number\">4.2</span><span class=\"token punctuation\">.</span><span class=\"token number\">1</span> Compatible Apple LLVM <span class=\"token number\">7.0</span><span class=\"token punctuation\">.</span><span class=\"token number\">0</span> <span class=\"token punctuation\">(</span>clang<span class=\"token number\">-700.0</span><span class=\"token punctuation\">.</span><span class=\"token number\">59.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> on darwin\nType <span class=\"token string\">\"help\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"copyright\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"credits\"</span> <span class=\"token operator\">or</span> <span class=\"token string\">\"license\"</span> <span class=\"token keyword\">for</span> more information<span class=\"token punctuation\">.</span>\n</code></pre>\n<pre class=\" language-shell\"><code class=\"language-shell\">gh\nfh\ngf\nhh\n</code></pre>\n<pre class=\" language-shell\"><code class=\"language-shell\">TIM_ClearITPendingBit(TIM3, TIM_IT_Update) \n</code></pre>\n<pre class=\" language-shell\"><code class=\"language-shell\">echo \"hello wolrd\"\n</code></pre>\n<pre class=\" language-bash\"><code class=\"language-bash\">this is a demo <span class=\"token keyword\">for</span> testing the code block on the hexo blog\n</code></pre>\n<p><img src=\"https://alpha.wallhaven.cc/wallpapers/thumb/small/th-729362.jpg\" alt=\"图片demo\"></p>\n","categories":["hexo美化"],"tags":["hexo"]},{"title":"linux命令","url":"http://yoursite.com/2019/04/28/linux命令/","content":"<h1 id=\"1-cd命令\"><a href=\"#1-cd命令\" class=\"headerlink\" title=\"1 cd命令\"></a>1 cd命令</h1><blockquote>\n<p>cd 是change directory的意思，即切换目录。</p>\n</blockquote>\n<hr>\n<ol>\n<li>cd /home 进入‘/home’目录<blockquote>\n<p>比如cd /c 表示进入C盘<br>cd /e/Blog b表示进入E盘的Blog文件夹</p>\n</blockquote>\n<h1 id=\"2-pwd命令\"><a href=\"#2-pwd命令\" class=\"headerlink\" title=\"2 pwd命令\"></a>2 pwd命令</h1>pwd命令显示当前工作路径</li>\n</ol>\n<p>Linux中用 pwd 命令来查看”当前工作目录“的完整路径。 简单得说，每当你在终端进行操作时，你都会有一个当前工作目录。 </p>\n<p>在不太确定当前位置时，就会使用pwd来判定当前目录在文件系统内的确切位置。</p>\n<blockquote>\n<p>输入pwd可以确认当前位置</p>\n</blockquote>\n<h1 id=\"3-ls命令\"><a href=\"#3-ls命令\" class=\"headerlink\" title=\"3 ls命令\"></a>3 ls命令</h1><p>ls即list的意思，查看文件</p>\n<blockquote>\n</blockquote>\n<ul>\n<li>ls 查看目录中的文件</li>\n<li>ls -l显示文件和目录的详细资料</li>\n<li>ls -a列出全部文件，包括隐藏文件</li>\n<li>ls -R连同子目录的内容一同列出（递归列出），等于该目录下的所有文      件都会显示出来  </li>\n<li>ls [0-9]显示包含数字的文件名和目录名</li>\n</ul>\n<p><img src=\"https://linkenwild.github.io/images/linux_ls.jpg\" alt></p>\n<h1 id=\"4-cp命令\"><a href=\"#4-cp命令\" class=\"headerlink\" title=\"4 cp命令\"></a>4 cp命令</h1><p>复制文件的命令，作用：</p>\n<blockquote>\n<p>将多个文件一次性复制到一个目录下</p>\n</blockquote>\n<blockquote>\n<p>-a:将文件的特性一起复制<br>-p:连同文件的数学一起复制，而非使用默认方式，与-a相似，常用语备份<br>-i：若文件目标存在，在覆盖时会先进行询问操作<br>-r:递归持续复制，用于目录的持续行为<br>-u:目标文件与源文件有差异时才会复制</p>\n</blockquote>\n<blockquote>\n<p>将文件file复制到目录/usr/men/tmp下，并改名为file1<br>cp file /usr/men/tmp/file1</p>\n</blockquote>\n<blockquote>\n<p>将目录 /g/查阅资料/算法 下的所有文件及其子目录复制到目录 /g/查阅资料/gossip</p>\n</blockquote>\n<blockquote>\n<p>cp -r /usr/men /usr/zh</p>\n<pre class=\" language-javascript\"><code class=\"language-javascript\">cp <span class=\"token operator\">-</span>r <span class=\"token operator\">/</span>g<span class=\"token operator\">/</span>查阅资料<span class=\"token operator\">/</span>算法 <span class=\"token operator\">/</span>g<span class=\"token operator\">/</span>查阅资料<span class=\"token operator\">/</span>gossip\n</code></pre>\n</blockquote>\n<h1 id=\"5-mkdir创建文件夹命令\"><a href=\"#5-mkdir创建文件夹命令\" class=\"headerlink\" title=\"5 mkdir创建文件夹命令\"></a>5 mkdir创建文件夹命令</h1><blockquote>\n<p>mkdir [选项] DirName</p>\n<pre class=\" language-javascript\"><code class=\"language-javascript\">mkdir <span class=\"token operator\">/</span>g<span class=\"token operator\">/</span>查阅资料<span class=\"token operator\">/</span>gossip\n</code></pre>\n</blockquote>\n<blockquote>\n<p>表示在<em>/g/查阅资料</em>  下面建立了gossip文件夹</p>\n</blockquote>\n<h1 id=\"6-rm删除文件夹\"><a href=\"#6-rm删除文件夹\" class=\"headerlink\" title=\"6 rm删除文件夹\"></a>6 rm删除文件夹</h1><blockquote>\n<p>rm [选项] DirName</p>\n</blockquote>\n<blockquote>\n</blockquote>\n<p>-i 删除前逐一询问确认。</p>\n<blockquote>\n<p> -f 即使原档案属性设为唯读，亦直接删除，无需逐一确认。</p>\n</blockquote>\n<blockquote>\n<p>-r 将目录及以下之档案亦逐一删除。</p>\n</blockquote>\n<pre class=\" language-javascript\"><code class=\"language-javascript\">rm <span class=\"token operator\">-</span>r gossip\n</code></pre>\n<p><strong>表示将gossip文件夹删除</strong></p>\n<h1 id=\"7-mv命令\"><a href=\"#7-mv命令\" class=\"headerlink\" title=\"7 mv命令\"></a>7 mv命令</h1><blockquote>\n<p>-f ：force强制的意思，如果目标文件已经存在，不会询问而直接覆盖</p>\n</blockquote>\n<blockquote>\n<p>-i ：若目标文件已经存在，就会询问是否覆盖</p>\n</blockquote>\n<blockquote>\n<p>-u ：若目标文件已经存在，且比目标文件新，才会更新</p>\n</blockquote>\n<h1 id=\"8-cat命令查看文本内容\"><a href=\"#8-cat命令查看文本内容\" class=\"headerlink\" title=\"8 cat命令查看文本内容\"></a>8 cat命令查看文本内容</h1><blockquote>\n<p>cat file1 从第一个字节开始正向查看文件的内容</p>\n<p>tac file1 从最后一行开始反向查看一个文件的内容</p>\n<p>cat -n file1 标示文件的行数 </p>\n<p>more file1 查看一个长文件的内容 </p>\n<p>head -n 2 file1 查看一个文件的前两行 </p>\n<p>tail -n 2 file1 查看一个文件的最后两行 </p>\n<p>tail -n +1000 file1  从1000行开始显示，显示1000行以后的</p>\n<p>cat filename | head -n 3000 | tail -n +1000  显示1000行到3000行</p>\n<p>cat filename | tail -n +3000 | head -n 1000  从第3000行开始，显示1000(即显示3000~3999行)</p>\n</blockquote>\n","categories":["Linux学习"],"tags":["Linux"]},{"title":"Hexo FexO主题中加入网页音乐播放","url":"http://yoursite.com/2019/04/26/Hexo-FexO主题中加入网页音乐播放/","content":"<h1 id=\"hexo添加网页音乐播放\"><a href=\"#hexo添加网页音乐播放\" class=\"headerlink\" title=\"hexo添加网页音乐播放\"></a>hexo添加网页音乐播放</h1><p><strong>download Aplayer 源码</strong></p>\n<p><a href=\"https://github.com/MoePlayer/APlayer\" target=\"_blank\" rel=\"noopener\">访问地址</a></p>\n<p>使用git clone下载到本地，</p>\n<pre class=\" language-shell\"><code class=\"language-shell\">git clone https://github.com/MoePlayer/APlayer\n</code></pre>\n<p>解压后将<strong>dist</strong>文件复制到<strong>themes\\fexo\\source</strong>下</p>\n<h1 id=\"新建music-js\"><a href=\"#新建music-js\" class=\"headerlink\" title=\"新建music.js\"></a>新建music.js</h1><p>加入如下内容</p>\n<pre class=\" language-shell\"><code class=\"language-shell\">    const ap = new APlayer({\n    container: document.getElementById('aplayer'),\n    fixed: true,\n    autoplay: true,\n    volume: 0.3,\n    loop: 'all',\n    audio: [\n      {\n        name: '时间煮酒',\n        artist: '郁可唯',\n        url: 'http://up.mcyt.net/?down/37600.mp3',\n        cover: 'http://imge.kugou.com/stdmusic/20130625/20130625181709936236.jpg',\n      },\n      {\n        name: '爱情转移',\n        artist: '陈奕迅',\n        url: 'http://other.web.ra01.sycdn.kuwo.cn/resource/n2/320/52/97/1397406180.mp3',\n        cover: 'http://imge.kugou.com/stdmusic/20161010/20161010200518926406.jpg',\n      },\n            {\n        name: '钟无艳',\n        artist: '谢安琪',\n        url: 'http://www.ytmp3.cn/down/39157.mp3',\n        cover: 'http://img.ytmp3.cn/image/75.jpg',\n      },\n            {\n        name: '不将就',\n        artist: '李荣浩',\n        url: 'http://www.ytmp3.cn/down/32925.mp3',\n        cover: 'http://img.ytmp3.cn/image/31.jpg',\n      },\n             {\n        name: \"岁月神偷\",\n        artist: '金玟岐',\n        url: 'http://www.ytmp3.cn/down/44537.mp3',\n        cover: 'http://img.ytmp3.cn/image/69.jpg',\n      },\n      {\n        name: '惊蛰',\n        artist: '音阙诗听/王梓钰',\n        url: 'http://www.ytmp3.cn/down/48755.mp3',\n        cover: 'http://p1.music.126.net/5MmXpaP9r88tNzExPGMI8Q==/109951163370350985.jpg?param=130y130',\n      }            \n    ]\n    });\n</code></pre>\n<h1 id=\"deployer生成页面，访问即可\"><a href=\"#deployer生成页面，访问即可\" class=\"headerlink\" title=\"deployer生成页面，访问即可\"></a>deployer生成页面，访问即可</h1><pre class=\" language-shell\"><code class=\"language-shell\">hexo g -d\n</code></pre>\n<p><img src=\"https://linkenwild.github.io/images/music_player.jpg\" alt></p>\n","categories":["hexo美化"],"tags":["hexo"]},{"title":"hexo博客美化添加live2d萌宠","url":"http://yoursite.com/2019/04/26/hexo博客美化添加live2d萌宠/","content":"<h1 id=\"hexo添加live2d萌宠\"><a href=\"#hexo添加live2d萌宠\" class=\"headerlink\" title=\"hexo添加live2d萌宠\"></a>hexo添加live2d萌宠</h1><p>live2d的仓库地址：</p>\n<p><a href=\"https://github.com/EYHN/hexo-helper-live2d/blob/master/README.zh-CN.md\" target=\"_blank\" rel=\"noopener\">Repo Address</a></p>\n<h2 id=\"安装插件\"><a href=\"#安装插件\" class=\"headerlink\" title=\"安装插件\"></a>安装插件</h2><ol>\n<li>在hexo的git bash下输入<pre class=\" language-shell\"><code class=\"language-shell\">npm install --save hexo-helper-live2d\n</code></pre>\n<blockquote>\n<p>等待安装完成如图<br><img src=\"https://linkenwild.github.io/images/live2d.jpg\" alt></p>\n</blockquote>\n</li>\n</ol>\n<p>2.插件安装完成后，选择萌宠模型。</p>\n<blockquote>\n<p>萌宠模型展示图 <a href=\"https://huaji8.top/post/live2d-plugin-2.0/\" target=\"_blank\" rel=\"noopener\">Modeling</a></p>\n</blockquote>\n<pre class=\" language-shell\"><code class=\"language-shell\">- live2d-widget-model-chitose\n- live2d-widget-model-epsilon2_1\n- live2d-widget-model-gf\n- live2d-widget-model-haru\n- live2d-widget-model-haruto\n- live2d-widget-model-hibiki\n- live2d-widget-model-hijiki\n- live2d-widget-model-izumi\n- live2d-widget-model-koharu\n- live2d-widget-model-miku\n- live2d-widget-model-ni-j\n- live2d-widget-model-nico\n- live2d-widget-model-nietzsche\n- live2d-widget-model-nipsilon\n- live2d-widget-model-nito\n- live2d-widget-model-shizuku\n- live2d-widget-model-tororo\n- live2d-widget-model-tsumiki\n- live2d-widget-model-unitychan\n- live2d-widget-model-wanko\n- live2d-widget-model-z16\n</code></pre>\n<ol start=\"3\">\n<li>选择安装，我选择的是Hibiki<pre class=\" language-shell\"><code class=\"language-shell\">npm install live2d-widget-model-hibiki\n</code></pre>\n如图所示</li>\n</ol>\n<p><img src=\"https://linkenwild.github.io/images/hibiki.jpg\" alt></p>\n<h1 id=\"使用配置\"><a href=\"#使用配置\" class=\"headerlink\" title=\"使用配置\"></a>使用配置</h1><ol>\n<li>在hexo博客的根目录的配置文件下_config.yml中加入以下代码段</li>\n</ol>\n<pre class=\" language-shell\"><code class=\"language-shell\">    live2d:\n    enable: true\n    scriptFrom: local\n    pluginRootPath: live2dw/\n    pluginJsPath: lib/\n    pluginModelPath: assets/\n    tagMode: false\n    debug: false\n    model:\n    use: live2d-widget-model-hibiki\n    display:\n    position: right\n    width: 150\n    height: 300\n    mobile:\n    show: true\n</code></pre>\n<ol start=\"2\">\n<li>同步显示效果<br>在hexo的git bush下输入<pre class=\" language-shell\"><code class=\"language-shell\">hexo g -d\n</code></pre>\n完成同步</li>\n</ol>\n<p><em>效果图</em><br><img src=\"https://linkenwild.github.io/images/hibiki_model.jpg\" alt></p>\n","categories":["hexo美化"],"tags":["hexo"]},{"title":"学习Git","url":"http://yoursite.com/2019/04/26/学习Git/","content":"<p>在廖雪峰的个人网站上学习Git分布式版本管理工具，真实好用，下载了Git和Github，一直没有利用起来，好好学习一下过程。</p>\n<p><img src=\"https://linkenwild.github.io/images/purple.jpg\" alt></p>\n","categories":["技术迁移"],"tags":["Git"]},{"title":"博客主题迁移记","url":"http://yoursite.com/2019/04/25/博客主题迁移记/","content":"<p>开始博客建站那会，使用的是业界最普遍的<strong>Next</strong>主题，很多人聊起这个主题，都说太普遍了，是一种烂大街的情景。想着哪天把主题换了吧，今天在网络上冲浪时，偶然间发现<strong><em>fexo</em></strong>这个主题不错。</p>\n<h2 id=\"Fexo\"><a href=\"#Fexo\" class=\"headerlink\" title=\"Fexo\"></a>Fexo</h2><p>界面简洁，白色为主色调。而且二级网页、三级网页切入自然流畅，本人非常喜欢这个主题，加载速度相比于<strong>Next</strong>主题加速了不少。<a id=\"more\"></a></p>\n<h1 id=\"分类\"><a href=\"#分类\" class=\"headerlink\" title=\"分类\"></a>分类</h1><p>在这个主题下，可以轻松的接入自己的GitHub主页，Twitter主页以及自己的Instagram主页。</p>\n<h2 id=\"评论系统\"><a href=\"#评论系统\" class=\"headerlink\" title=\"评论系统\"></a>评论系统</h2><p>也了解到有gitment和gitalk这几种评论系统，好像都很复杂，不适合小白去折腾。今天有幸看到一篇关于<em>valine</em>的介绍，只需要简单几步，就可以将博文的评论系统设置成功。评论默认语句占行符里我这样写道：</p>\n<pre class=\" language-shell\"><code class=\"language-shell\">Youth is not a period of time,it is a state of mind.\n</code></pre>\n<h2 id=\"主要定位\"><a href=\"#主要定位\" class=\"headerlink\" title=\"主要定位\"></a>主要定位</h2><p>其实博客主要定位就是每天工作的记录总结，框架搭好了，就可以接下来往里面加入自己的所思所想所为了。<br><img src=\"https://linkenwild.github.io/images/fexo.jpg\" alt></p>\n","categories":["hexo美化"],"tags":["remind"]},{"title":"Hello World","url":"http://yoursite.com/2019/04/25/hello-world/","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.<a id=\"more\"></a></p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><p><img src=\"https://linkenwild.github.io/images/red.jpg\" alt></p>\n<pre class=\" language-bash\"><code class=\"language-bash\">$ hexo new <span class=\"token string\">\"My New Post\"</span>\n</code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><pre class=\" language-bash\"><code class=\"language-bash\">$ hexo server\n</code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><pre class=\" language-bash\"><code class=\"language-bash\">$ hexo generate\n</code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><pre class=\" language-bash\"><code class=\"language-bash\">$ hexo deploy\n</code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","categories":["技术"],"tags":["technical"]},{"title":"STM32最小系统板","url":"http://yoursite.com/2019/04/22/STM32最小系统板/","content":"<h1 id=\"构成\"><a href=\"#构成\" class=\"headerlink\" title=\"构成\"></a>构成</h1><hr>\n<ul>\n<li>主控MCU</li>\n<li>电源</li>\n<li>复位</li>\n<li>晶振（外置）</li>\n<li>指示灯</li>\n<li>按键</li>\n<li>下载SWD/JLINK</li>\n</ul>\n<hr>\n","categories":["硬件"],"tags":["STM32"]},{"title":"2019年的第一件数码新品","url":"http://yoursite.com/2019/04/21/2019年的第一件数码新品/","content":"<p>我的手机自带的Earpods由于使用多年，加上爱护不利，观察到了耳机线皮有一处断裂，但是仍然可以正常使用。由于我是个强迫症，一旦发现有瑕疵之后，就特别嫌弃。正好赶上Apple发布新品Airpods2代，咬紧牙关，使用自己的学生身份申请的招商银行信用卡在官网无息分期买了。<br><a id=\"more\"></a><br>这事，真的凑巧了，假若我没有</p>\n<h2 id=\"招商银行信用卡\"><a href=\"#招商银行信用卡\" class=\"headerlink\" title=\"招商银行信用卡\"></a>招商银行信用卡</h2><p>，想进行分期支付的话，要么就去京东天猫之类的旗舰店去买，要么就是全额支付。现在想想有了信用卡，有些小窃喜呢！</p>\n<p>买回来之后，试用了几个小时，体验如下：方便是很方便，但是对不起1200+的价格。没有广告中说的那么优秀、那么惊艳。看来不管是什么商品，广告和现实中还是存在较大差距的，这样的例子在小米、华为产品中比比皆是。<br><img src=\"https://linkenwild.github.io/images/Airpods.jpg\" alt><br>既然已经到手，后面就要多多使用下这个无线耳机了。后期打算把哔哩哔哩上的视频补一下，还有以前在网易云课堂、慕课等的资源一直收藏未使用过。昨天夜里体验了下，手机放下桌，自己在上床戴着听，真的是很爽的体验，而且避免了熬夜禁不住诱惑玩手机，还可以远程定闹钟什么的。很适合我这个自制力差的懒人了。没错，估计库克就是为这样一个群体的人考虑的吧，哈哈哈，自恋了一些。</p>\n<hr>\n<blockquote>\n<p>只有发挥出最大价值，才能对得起自己的付出。</p>\n</blockquote>\n<hr>\n","categories":["-生活杂记"],"tags":["Airpods"]},{"title":"多信道并发通信","url":"http://yoursite.com/2019/04/11/多信道并发通信/","content":"<p><code>title: 多信道并发通信 date: 2019-04-11 15:41:18 updated: 2019-04-15 20:18:54</code></p>\n<p>可靠传输——</p>\n<ul>\n<li>单跳重传</li>\n<li>端到端重传</li>\n</ul>\n<p><em>注意</em>：</p>\n<pre><code>对节点在新信道工作时间进行限制，避免因为切换新信道而无法接收到原信道数据的情况。\n</code></pre><p><img src=\"https://linkenwild.github.io/images/circuit.jpg\" alt></p>\n<p><em>2019/4/11 9:48:03 </em></p>\n","categories":["设计"],"tags":["通信"]},{"title":"毕设选题依据","url":"http://yoursite.com/2019/04/10/毕设选题依据/","content":"<p><code>title: 毕设选题依据 date: 2019-04-09 15:41:18 updated: 2019-04-10 20:18:54</code></p>\n<p>现代工业领域广泛采用传感器，实时监控工业生产中的过程参数，用于分析、优化和协调，实现工业产量增加，产品质量提高。无线传感器网络（Wireless Sensor Networks,WSN）是其中的技术之一[1]，工业自动化技术与传感器相结合，从下层到上层各个维度垂直发展，推动工业从传统生产向智能生产迈进[2]。目前无线接入方式多元化，有短距离无线通信技术和广域网通信技术[4]，其中工业无线技术领域已经形成ISA100.11a、WirelessHART和我国自主研发的WIA-PA和WIA-FA标准。目前一方面行业标准化产品渗透率不断提升，另一方面事实是行业企业市场占有率并不高。主要壁垒是与现有IT系统融合程度、成本等其他原因，上游技术、产品平台、方案等的供给方与下游用户的需求不匹配。</p>\n<p>ZigBee技术是一种低速短距离传输的无线协议，底层采用802.15.4标准规约的MAC层与物理层。ZigBee技术从2004年开始推出版本至今，已经发展了数十年，技术趋于成熟和完善。通过大幅简化协议(不到蓝牙技术协议的1/10)，降低了对通信控制器的要求，而且ZigBee免收协议专利费，每块芯片的价格大约为2美元。<a id=\"more\"></a>ZigBee技术凭借低功耗、时延短、低成本的特点，在工业控制系统的实时控制领域得到广泛的认可。采用ZigBee技术开发工业无线网络控制设备节点以及搭建测控系统网络，对中小规模的自动化企业来说优势十分明显，竞争力很强。</p>\n<p>基于ZigBee通信技术，布置大规模的无线传感器节点用于现场设备和外界环境的信息数据的感知采集，并将边缘侧数据上传至控制中心进行协同处理、实时控制和监测。基于边缘计算的能力赋能和为数据实时服务的效率赋能，控制中心能实时监控工业现场的状况，及时发现问题，减少生产过程中的安全问题，给企业降低生产成本。</p>\n<p>工业上实时性指系统在事件发生后，在不同量级的时间范围内做出反应[10]。工业控制对实时性的需求分为三个等级：工业级的控制需求要求响应时间在<code>1s</code>左右即可，而过程级控制一般需要响应时间在<code>10~100ms</code>以内，运动控制要求响应时间在<code>1ms</code>。某公司重项研发项目提出具有实时性要求的无线传感器网络控制系统(Wireless Sensor Network Control System,WSNCS)，由于ZigBee无线技术数据传输可靠、成本低等特点，选择ZigBee方案。项目定位<code>100ms</code>的实时控制需求，期望网络控制系统!<code>1s</code>刷新周期内轮询节点设备的数量达到50个。</p>\n<p>自动化领域国际厂商Emerson推出的无线实时控制系统在<code>1s</code>的刷新周期下支持12个设备接入数，引用Emerson接入设备容量科学估算公式Emerson’s Smart Wireless Gateway Capacity Estimator得出，以接入50台设备计，需要<code>4s</code>的通信时间，实时性远远达不到保证。NXP恩智浦半导体公司作为ZigBee Alliance成员企业，在ZigBee技术研发和应用方面积累了丰富经验。以NXP JN516X系列ZigBee芯片为例，搭载ZigBee芯片的两个设备节点请求应答时间为<code>14ms</code>，设备节点切换目标地址时间为<code>7ms</code>,假设系统存在一个<code>10ms</code>的实时控制的节点分组。<code>1s</code>刷新周期下，接入设备为29台，比Emerson’s Smart Wireless Gateway采用的实时控制系统增加17台接入设备。仍然达不到项目要求的50台的设备接入数。</p>\n<p>因此，在ZigBee无线网络有限带宽资源和通信速率的约束下，保证控制的实时性和提高带宽资源利用率成为亟待解决的问题[15]。此外，对于自动化过程生产来说，设备节点由于外界因素等其他原因产生故障。在降低企业运行成本、不影响工业生产的前提下，如何快速响应并恢复系统网络的正常运转，提高系统鲁棒性，是一个值得考量和引起重视的问题。通过对现有的网络系统轮询调度机制进行分析、建模仿真，优化并设计轮询调度机制，提高轮询节点数量，充分利用信道资源[16]。</p>\n<p>在多信道协议的原理和研究方面，相关学者做了些工作和实验。文献基于不同节点能够同时在两个或两个以上的信道上进行CSMA/CA冲突避免，ZigBee设备节点具有当前时刻的信道唯一性，即在某个时刻只能工作在一个物理信道上[17]。ZigBee设备具有物理发送器和接收器，同一时刻只能处于发送或者接收任意一种状态，工作于半双工通信模式。</p>\n<p>基于分簇的研究，相关文献中簇头使用一致的物理信道。通过时分复用方式依次占用该主信道，簇内的所有节点由簇首节点管理，即簇头分配不同的物理信道给簇内节点，以避免相互干扰。文献提出不分簇的网络拓扑结构，即实现网络系统内所有节点呈现星型、树型或者网状结构，每个节点对信道的使用是通过主动发起申请获取，而不是事先配置固定占用。这种方式容易产生通信冲突和碰撞，对于网络的运行状态不可知，鲁棒性不强[18]。</p>\n<p>​    网络系统在长时间运行中因某些客观原因可能存在故障节点，为了保证高质量服务，WSN必须能够在执行必要的恢复操作之前检测故障传感节点。Mukhopadhyay 等人提出用于无线传感网络可靠性分析的马尔科夫模型[18]，Bein等人从容错性和可靠性角度研究了无线传感器网络的覆盖问题，提出了三种容错部署模型[19]。</p>\n<p>基于以上的研究现状及文献，提出一种多信道的网络控制系统调度。将网络中所有节点最大化数据传输和数据融合能力，分成若干个簇，通过算法计算出网络中簇的个数以及簇内设备节点的数量[20]。每个簇内分配唯一的数据融合通信信道，簇间主从通信采用固定控制信道，同时创新性地簇内采用令牌机制传输，实现簇内和簇间通信独立进行，能够最大化网络控制系统的设备接入规模，实现企业生产最大化，利润最大化。</p>\n<p><strong>选题意义：</strong></p>\n<p>（1）优化轮询调度方法，系统轮询周期内提升轮询节点设备数量，扩大网络规模，提高产品竞争力。</p>\n<p>（2）创新检错、容错机制设计，提高快速诊断能力，降低维护时间，减少运维压力，提高系统鲁棒性。</p>\n<p>（3）设计隐形令牌通信，缩减冗余帧对带宽资源的占用，提高网络通信效率。<br><img src=\"https://linkenwild.github.io/images/graduate-project-plan.jpg\" alt></p>\n","categories":["技术"],"tags":["technical"]},{"title":"多信道分层分簇","url":"http://yoursite.com/2019/04/10/多信道分层分簇/","content":"<p><strong>变量</strong></p>\n<ol>\n<li><p><!--时隙-->时隙</p>\n</li>\n<li><p><!--信道-->时隙</p>\n</li>\n<li><p><!--刷新率-->时隙</p>\n</li>\n</ol>\n<p>节点将收集的数据汇集到一个Base Station(BS)，簇头——负责簇内管理和簇间数据通信工作。<br><a id=\"more\"></a></p>\n<p><strong><em>ARCH协议：</em></strong>自适应和鲁棒性信道跳变协议。簇头节点需要在不同信道上来回切换——原因是簇内与簇间通信的信道不同。（簇头使用TDMA机制）<br><img src=\"https://linkenwild.github.io/images/beautiful_girl.png\" alt></p>\n<p>适用范围：</p>\n<p>簇内通信较多，簇间通信较少的网络拓扑结构</p>\n<p><strong><em>TMCP协议：</em></strong></p>\n<p>不需要节点实时更改信道，</p>\n<p>前提——网络系统严格时间同步很难，且可用信道较少</p>\n<p>子树划分：依据相邻节点干扰较大的分配在不同子树中，距离较远的没有干扰的节点分配到同一子树上。</p>\n<p><em>现状：</em></p>\n<p>ZigBee可用信道不足，只有25/26信道与wifi无交叉</p>\n<p>f=2405+5(k-11)</p>\n<p><strong>建议：</strong>11,15,20,26    原理——频段越低，传输距离越远</p>\n<p>TI公司推荐信道经验：11,15,20,25</p>\n<p><em><u>写于2019/4/10    重庆，小雨</u></em></p>\n","categories":["技术"],"tags":["technical"]},{"title":"基于时分复用的MAC协议","url":"http://yoursite.com/2019/04/10/基于时分复用的MAC协议/","content":"<h2 id=\"基于时分复用的MAC协议\"><a href=\"#基于时分复用的MAC协议\" class=\"headerlink\" title=\"基于时分复用的MAC协议\"></a>基于时分复用的MAC协议</h2><pre><code>在传感器网络中采用TDMA机制，就是为每个节点分配独立的用于数据发送或结束的时槽，而节点在其他空闲时槽内转入睡眠状态。TDMA没有竞争机制的碰撞重传问题，数据传输不需要过多的控制信息。但是，TDMA需要严格的时间同步。节点之间为了完成任务需要协同工作，同样不可避免的需要时间同步。缺点是：网络可扩展性不足，很难调整时间帧的长度和时槽的分配。\n</code></pre><h2 id=\"对时分复用网络的改进\"><a href=\"#对时分复用网络的改进\" class=\"headerlink\" title=\"对时分复用网络的改进\"></a>对时分复用网络的改进</h2><blockquote>\n<p><code>基于分簇网络的MAC协议</code><br>    传感器节点固定划分或者自动形成多个簇，每个簇内有一个簇头节点，簇头负责为簇内所有传感器节点分配时槽，收集和处理簇内节点发来的数据，并将数据发送给汇聚节点。<br><img src=\"https://linkenwild.github.io/images/802.11与802.15.4信道重叠.jpg\" alt></p>\n</blockquote>\n","categories":["技术"],"tags":["technical"]},{"title":"软件定义网络","url":"http://yoursite.com/2019/04/10/软件定义网络/","content":"<p><code>title: 软件定义网络 date: 2019-04-10 09:43:41 updated: 2019-04-10 20:18:54</code></p>\n<p><strong>摘要：</strong></p>\n<p>物联网领域的迅猛发展，使大量的传感器得以部署应用，产生研发自动可重构复杂无线网络技术的需求。软件定义网络（SDN）是一种有前途的、应用广泛的自动可重构的无线传感器网络的技术。SDN中，为了分配任务给其他节点并将报文包路由到控制sever，需要动态选择控制节点(激活传感器网络的功能)。对于传感器节点的剩余能量，以及传感器节点之间的传输距离，控制节点的选择问题已经形式化为np难问题。（注：np难问题—一个问题的求解理论上可以得到最优解，但是遍历所有可能的时间复杂度很高，现实中实现该问题的解变得不实际。）物联网智能传感设备由于无法频繁充电，会遇到低电量问题。因此，研发软件定义无线传感网络需要将能效路由机制考虑进去。本文中，提出了一种使用分叉和连接的自适应粒子群的绿色路由算法来最大化延长传感网络的生命周期。FJAPSO在两个层次上进行自动优化:优化控制节点数量和优化控制节点组簇。实验结果表明：FJAPSO比其他目前发展水平表现优异，并且最大化延长传感网络的生命周期。</p>\n<p>SDN→NP难→传感设备电量不足问题→FJAPSO算法→FJAPSO实验结果</p>\n<p>I引言</p>\n<p>​       新兴技术如物联网、云计算、雾计算、大数据，显著的应用在智能家居、基础设施、医疗、零售业、交通运输、安全、监管和其他工业必需品上。IOT的实时性要求已经集成到云计算、雾计算中进行处理和分析高数据流传感数据。物联网基础设施的不断发展，也使得无线传感器网络的结构更加密集。<a id=\"more\"></a>无线传感器网络基本上由能够感知环境和路由转发数据的传感器节点组成，无线传感器网络节点具有有限的通信、存储和计算能力。很多时候，无线传感器网络部署在恶劣的环境中，更换节点不但困难而且代价昂贵。在某些情况下，传感器节点需要在不充电和更换电池的情况下长时间工作。因此，限制能耗是WSN设计的一大挑战。传感器的低内存、低功率和低电池引起了学术界的关注。</p>\n<p>无线传感器网络组成→WSN工作环境→限制能耗问题</p>\n<p>​       随着传感器成本越来越低，海量的IOT设备应用在地理区域内进行实时数据的感知，采集，收集，通信，发送和处理。无线传感器网络的复杂性日益增加，使得手动实时控制和维护如此密集的无线传感器网络变为不可能。这个要求引入了软件定义的无线传感器网络(SDWSN)，克服了传统传感器网络的局限性，并利用WSN实现了自动监控。在SDWSN中，SDSNs代替了传统的传感节点，SDSNs能够自动监控网络故障并且能基于实时监测动态重构其功能。在网络资源虚拟化环境中，SDWSN通过解耦数据方面和控制方面使得可编程控制变得更加便利。这增加了SDN未来的应用范围，以及增强了对虚拟化为基础的云计算雾计算等的适用性。SDWSN的智能控制受到数据方面资源及其在中心控制器中的逻辑实现的影响。该控制器通过标准兼容接口与数据方面资源连接。中心控制器运行着网络操作系统，数据方面和中心控制器的交互是通过分布式簇进行连接。中心控制器上的软件程序用于自动优化网络资源，数据方面设备管理，监控和网络故障监测。该架构如图1所示，在物联网应用上，利用多功能智能传感设备和借助高度自动化，动态可重构和简化的SDWSN进行开发和部署。因此，SDWSN对于IoT时代将来的研究根本上讲是必要的。<br><img src=\"https://linkenwild.github.io/images/SDN.jpg\" alt><br>网络中海量的传感设备→引入SDWSN→1、实现自动监控功能→2、动态重构节点功能→讲解SDSN技术→讲解图1架构</p>\n<p>​       SDSNs（软件定义传感网络）分成许多簇，每个簇中由一个控制节点构成。簇中其他节点作为执行具体分配任务的普通SDSNs。为了最小化能耗和避免数据冲突，使用PSO算法。</p>\n<p>1、根据预定数目的簇使用路由算法优化能耗。当网络具有弹性或者可扩展性时，这种方法不会自动调整簇的数量来优化能耗。这是SDWSN路由选择中的一个开销，可能会导致更多的能源消耗。</p>\n<p>2、为了优化距离和能源消耗，使用适应度函数考量SDSNs与控制sever(CS)或CN与CS之间的距离。然而，为了优化传输能量和平衡CNs与CNs之间的负载，簇中SDSNs与CN之间的距离起到重要作用，然而被忽略了。</p>\n<p>3、为了完成像组簇、路由选择和优化簇的数量这样不同的目标，PSO是单独使用的，计算成本很高。</p>\n<p>普通PSO的三点缺点→引入FJAPSO→</p>\n<p>​       为了优化SDWSN路由转发中的能耗，并且在弹性和可扩展网络场景中发挥有效作用，优化控制节点数量和他们之间相对的位置是有必要的。</p>\n<p>1、一种分叉和连接自适应粒子群算法(FJAPSO)，是一种节能(绿色)、双目标和二级优化路由算法。</p>\n<p>2、为了让FJAPSO快速收敛，通过高效地自适应调节惯性权重系数来对PSO算法进行修正。</p>\n<p>3、FJAPSO的每一次迭代中，每个粒子分叉成预定数量的子粒子群中去，然后将子粒子合并成具有最优分叉子粒子解的一个父粒子中。分叉子粒子通过控制节点（位置）的选择来优化能效路由，而父粒子用来优化簇的数目。</p>\n<p>4、提出一种有效的适应度函数，将CNs与CS之间的距离、SDSNs与CN之间的距离考虑进来，通过基于总传输距离平衡簇的大小将传输能量最小化。</p>\n<p>5、实验研究证明FJAPSO比目前其他现有技术更有效。</p>\n<p>FJAPSO→描述分叉连接模型→适应度函数</p>\n","categories":["技术"],"tags":["technical"]},{"title":"毕设注意事项 | 选题意义","url":"http://yoursite.com/2019/04/09/毕设选题意义/","content":"<p><code>title: 毕设注意事项 | 选题意义 date: 2019-04-09 19:34:43 updated: 2019-04-25 14:35:21</code><br><strong>选题意义：</strong></p>\n<p>（1）优化轮询调度方法，系统轮询周期内提升轮询节点设备数量，扩大网络规模，提高产品竞争力。</p>\n<p>（2）创新检错、容错机制设计，提高快速诊断能力，降低维护时间，减少运维压力，提高系统鲁棒性。</p>\n<p>（3）设计隐形令牌通信，缩减冗余帧对带宽资源的占用，提高网络通信效率。</p>\n","categories":["技术"],"tags":["remind"]},{"title":"categories","url":"http://yoursite.com/categories/index.html","content":"","categories":[],"tags":[]},{"title":"about","url":"http://yoursite.com/about/index.html","content":"<p><strong>关于博客名字</strong></p>\n<p>Linkenwild这个名字，前一半一是取自美国伟大总统林肯，崇尚他完成的伟大事业；二是取自我的姓名的谐音。后一半wild取自狂舞、狂野之意，寓意进取，勇往直前，不要畏畏缩缩。</p>\n<p><strong>关于我</strong></p>\n<p>目前在重庆西南大学念硕士二年级，从事网络控制系统的研究。希望未来的日子里将自己的点点滴滴和技术思考放到这里，以备后序自省。欢迎与我进行交流，我的个人微信号bese64码：TGlua2Vud2lsZA==</p>\n<p><img src=\"https://linkenwild.github.io/images/hole.jpg\" alt></p>\n","categories":[],"tags":[]},{"title":"tags","url":"http://yoursite.com/tags/index.html","content":"<p><strong>C</strong></p>\n<p><strong>Cpp</strong></p>\n<p><strong>笔记</strong></p>\n","categories":[],"tags":[]}]